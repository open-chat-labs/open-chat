(
  record {
    reserved_ids = vec { 1_005 : nat64; 1_006 : nat64; 1_007 : nat64 };
    functions = vec { 
      record { id = 0 : nat64; name = "Unspecified"; description = opt "Catch-all w.r.t to following for all types of proposals."; function_type = opt variant { NativeNervousSystemFunction = record {} };}; 
      record { id = 1 : nat64; name = "Motion"; description = opt "Side-effect-less proposals to set general governance direction."; function_type = opt variant { NativeNervousSystemFunction = record {} };}; 
      record { id = 2 : nat64; name = "Manage nervous system parameters"; description = opt "Proposal to change the core parameters of SNS governance."; function_type = opt variant { NativeNervousSystemFunction = record {} };}; 
      record { id = 3 : nat64; name = "Upgrade SNS controlled canister"; description = opt "Proposal to upgrade the wasm of an SNS controlled canister."; function_type = opt variant { NativeNervousSystemFunction = record {} };}; 
      record { id = 4 : nat64; name = "Add nervous system function"; description = opt "Proposal to add a new, user-defined, nervous system function:a canister call which can then be executed by proposal."; function_type = opt variant { NativeNervousSystemFunction = record {} };}; 
      record { id = 5 : nat64; name = "Remove nervous system function"; description = opt "Proposal to remove a user-defined nervous system function,which will be no longer executable by proposal."; function_type = opt variant { NativeNervousSystemFunction = record {} };}; 
      record { id = 6 : nat64; name = "Execute nervous system function"; description = opt "Proposal to execute a user-defined nervous system function,previously added by an AddNervousSystemFunction proposal. A canister call will be made when executed."; function_type = opt variant { NativeNervousSystemFunction = record {} };}; 
      record { id = 7 : nat64; name = "Upgrade SNS to next version"; description = opt "Proposal to upgrade the WASM of a core SNS canister."; function_type = opt variant { NativeNervousSystemFunction = record {} };}; 
      record { id = 8 : nat64; name = "Manage SNS metadata"; description = opt "Proposal to change the metadata associated with an SNS."; function_type = opt variant { NativeNervousSystemFunction = record {} };}; 
      record { id = 9 : nat64; name = "Transfer SNS treasury funds"; description = opt "Proposal to transfer funds from an SNS Governance controlled treasury account"; function_type = opt variant { NativeNervousSystemFunction = record {} };}; 
      record { id = 10 : nat64; name = "Register dapp canisters"; description = opt "Proposal to register a dapp canister with the SNS."; function_type = opt variant { NativeNervousSystemFunction = record {} };}; 
      record { id = 11 : nat64; name = "Deregister Dapp Canisters"; description = opt "Proposal to deregister a previously-registered dapp canister from the SNS."; function_type = opt variant { NativeNervousSystemFunction = record {} };}; 
      record { id = 1_000 : nat64; name = "Upgrade local_user_index canisters"; description = opt "This will upload the given WASM to the user_index and trigger a rolling upgrade of local_user_index canisters on each subnet."; function_type = opt variant { GenericNervousSystemFunction = record { validator_canister_id = opt principal "4bkt6-4aaaa-aaaaf-aaaiq-cai"; target_canister_id = opt principal "4bkt6-4aaaa-aaaaf-aaaiq-cai"; validator_method_name = opt "upgrade_local_user_index_canister_wasm_validate"; target_method_name = opt "upgrade_local_user_index_canister_wasm";} };}; 
      record { id = 1_001 : nat64; name = "Upgrade user canisters"; description = opt "This will upload the given WASM to the user_index which will in turn call c2c_upgrade_user_canister_wasm on the local_user_index on each subnet. These will each trigger a rolling upgrade of user canisters on their subnet."; function_type = opt variant { GenericNervousSystemFunction = record { validator_canister_id = opt principal "4bkt6-4aaaa-aaaaf-aaaiq-cai"; target_canister_id = opt principal "4bkt6-4aaaa-aaaaf-aaaiq-cai"; validator_method_name = opt "upgrade_user_canister_wasm_validate"; target_method_name = opt "upgrade_user_canister_wasm";} };}; 
      record { id = 1_002 : nat64; name = "Add new local_user_index canister"; description = opt "This will add a reference to an uninstalled local_user_index canister on a new subnet."; function_type = opt variant { GenericNervousSystemFunction = record { validator_canister_id = opt principal "4bkt6-4aaaa-aaaaf-aaaiq-cai"; target_canister_id = opt principal "4bkt6-4aaaa-aaaaf-aaaiq-cai"; validator_method_name = opt "add_local_user_index_canister_validate"; target_method_name = opt "add_local_user_index_canister";} };}; 
      record { id = 1_003 : nat64; name = "Mark local_user_index full"; description = opt "This will mark the local_user_index with the given canister_id as full so that no more users will be created on this subnet."; function_type = opt variant { GenericNervousSystemFunction = record { validator_canister_id = opt principal "4bkt6-4aaaa-aaaaf-aaaiq-cai"; target_canister_id = opt principal "4bkt6-4aaaa-aaaaf-aaaiq-cai"; validator_method_name = opt "mark_local_user_index_full_validate"; target_method_name = opt "mark_local_user_index_full";} };}; 
      record { id = 1_004 : nat64; name = "Set max concurrent user canister upgrades"; description = opt "During a rolling user canister upgrade this controls how many user canisters can be upgraded concurrently. Setting a value of zero stops the upgrade altogether. Setting this value too high will slow down subnets during user upgrade."; function_type = opt variant { GenericNervousSystemFunction = record { validator_canister_id = opt principal "4bkt6-4aaaa-aaaaf-aaaiq-cai"; target_canister_id = opt principal "4bkt6-4aaaa-aaaaf-aaaiq-cai"; validator_method_name = opt "set_max_concurrent_user_canister_upgrades_validate"; target_method_name = opt "set_max_concurrent_user_canister_upgrades";} };}; 
      record { id = 2_000 : nat64; name = "Upgrade local_group_index canisters"; description = opt "This will upload the given WASM to the group_index and trigger a rolling upgrade of local_group_index canisters on each subnet."; function_type = opt variant { GenericNervousSystemFunction = record { validator_canister_id = opt principal "4ijyc-kiaaa-aaaaf-aaaja-cai"; target_canister_id = opt principal "4ijyc-kiaaa-aaaaf-aaaja-cai"; validator_method_name = opt "upgrade_local_group_index_canister_wasm_validate"; target_method_name = opt "upgrade_local_group_index_canister_wasm";} };}; 
      record { id = 2_001 : nat64; name = "Upgrade group canisters"; description = opt "This will upload the given WASM to the group_index which will in turn call c2c_upgrade_group_canister_wasm on the local_group_index on each subnet. These will each trigger a rolling upgrade of group canisters on their subnet."; function_type = opt variant { GenericNervousSystemFunction = record { validator_canister_id = opt principal "4ijyc-kiaaa-aaaaf-aaaja-cai"; target_canister_id = opt principal "4ijyc-kiaaa-aaaaf-aaaja-cai"; validator_method_name = opt "upgrade_group_canister_wasm_validate"; target_method_name = opt "upgrade_group_canister_wasm";} };}; 
      record { id = 2_002 : nat64; name = "Add new local_group_index"; description = opt "This will add a reference to an uninstalled local_group_index canister on a new subnet."; function_type = opt variant { GenericNervousSystemFunction = record { validator_canister_id = opt principal "4ijyc-kiaaa-aaaaf-aaaja-cai"; target_canister_id = opt principal "4ijyc-kiaaa-aaaaf-aaaja-cai"; validator_method_name = opt "add_local_group_index_canister_validate"; target_method_name = opt "add_local_group_index_canister";} };}; 
      record { id = 2_003 : nat64; name = "Mark local_group_index full"; description = opt "This will mark the local_group_index with the given canister_id as full so that no more groups will be created on this subnet."; function_type = opt variant { GenericNervousSystemFunction = record { validator_canister_id = opt principal "4ijyc-kiaaa-aaaaf-aaaja-cai"; target_canister_id = opt principal "4ijyc-kiaaa-aaaaf-aaaja-cai"; validator_method_name = opt "mark_local_group_index_full_validate"; target_method_name = opt "mark_local_group_index_full";} };}; 
      record { id = 2_004 : nat64; name = "Set max concurrent group canister upgrades"; description = opt "During a rolling group canister upgrade this controls how many group canisters can be upgraded concurrently. Setting a value of zero stops the upgrade altogether. Setting this value too high will slow down subnets during group upgrade."; function_type = opt variant { GenericNervousSystemFunction = record { validator_canister_id = opt principal "4ijyc-kiaaa-aaaaf-aaaja-cai"; target_canister_id = opt principal "4ijyc-kiaaa-aaaaf-aaaja-cai"; validator_method_name = opt "set_max_concurrent_group_canister_upgrades_validate"; target_method_name = opt "set_max_concurrent_group_canister_upgrades";} };}; 
      record { id = 3_000 : nat64; name = "Upgrade notifications canisters"; description = opt "This will upload the given WASM to the notifications_index and trigger a rolling upgrade of notifications_canisters on each subnet."; function_type = opt variant { GenericNervousSystemFunction = record { validator_canister_id = opt principal "4glvk-ryaaa-aaaaf-aaaia-cai"; target_canister_id = opt principal "4glvk-ryaaa-aaaaf-aaaia-cai"; validator_method_name = opt "upgrade_notifications_canister_wasm_validate"; target_method_name = opt "upgrade_notifications_canister_wasm";} };}; 
      record { id = 3_001 : nat64; name = "Add notifications canister"; description = opt "This will add a reference to an uninstalled notifications canister on a new subnet."; function_type = opt variant { GenericNervousSystemFunction = record { validator_canister_id = opt principal "4glvk-ryaaa-aaaaf-aaaia-cai"; target_canister_id = opt principal "4glvk-ryaaa-aaaaf-aaaia-cai"; validator_method_name = opt "add_notifications_canister_validate"; target_method_name = opt "add_notifications_canister";} };}; 
      record { id = 4_000 : nat64; name = "Add SNS proposals group"; description = opt "This will create a new proposals group with the given details and sync it with proposals from the given SNS governance canister."; function_type = opt variant { GenericNervousSystemFunction = record { validator_canister_id = opt principal "iywa7-ayaaa-aaaaf-aemga-cai"; target_canister_id = opt principal "iywa7-ayaaa-aaaaf-aemga-cai"; validator_method_name = opt "add_governance_canister_validate"; target_method_name = opt "add_governance_canister";} };}; 
      record { id = 4_001 : nat64; name = "Remove SNS proposals group"; description = opt "This will remove a proposals group linked to the given SNS governance canister id."; function_type = opt variant { GenericNervousSystemFunction = record { validator_canister_id = opt principal "iywa7-ayaaa-aaaaf-aemga-cai"; target_canister_id = opt principal "iywa7-ayaaa-aaaaf-aemga-cai"; validator_method_name = opt "remove_governance_canister_validate"; target_method_name = opt "remove_governance_canister";} };}; 
      record { id = 5_000 : nat64; name = "Upgrade storage_bucket canisters"; description = opt "This will upload the given WASM to the storage_index canister and trigger a rolling upgrade of storage_bucket on each subnet."; function_type = opt variant { GenericNervousSystemFunction = record { validator_canister_id = opt principal "rturd-qaaaa-aaaaf-aabaq-cai"; target_canister_id = opt principal "rturd-qaaaa-aaaaf-aabaq-cai"; validator_method_name = opt "update_bucket_canister_wasm_validate"; target_method_name = opt "update_bucket_canister_wasm";} };}; 
      record { id = 5_001 : nat64; name = "Add new storage_bucket canister"; description = opt "This will add a reference to an uninstalled storage_bucket canister."; function_type = opt variant { GenericNervousSystemFunction = record { validator_canister_id = opt principal "rturd-qaaaa-aaaaf-aabaq-cai"; target_canister_id = opt principal "rturd-qaaaa-aaaaf-aabaq-cai"; validator_method_name = opt "add_bucket_canister_validate"; target_method_name = opt "add_bucket_canister";} };}; 
      record { id = 5_002 : nat64; name = "Mark storage_bucket full"; description = opt "This will mark the storage_bucket with the given canister_id as full so that no more files will be uploaded to this bucket."; function_type = opt variant { GenericNervousSystemFunction = record { validator_canister_id = opt principal "rturd-qaaaa-aaaaf-aabaq-cai"; target_canister_id = opt principal "rturd-qaaaa-aaaaf-aabaq-cai"; validator_method_name = opt "set_bucket_full_validate"; target_method_name = opt "set_bucket_full";} };}; 
      record { id = 6_000 : nat64; name = "Add canister to cycles_dispenser"; description = opt "The cycles_dispenser will keep the added canister topped up with cycles."; function_type = opt variant { GenericNervousSystemFunction = record { validator_canister_id = opt principal "gonut-hqaaa-aaaaf-aby7a-cai"; target_canister_id = opt principal "gonut-hqaaa-aaaaf-aby7a-cai"; validator_method_name = opt "add_canister_validate"; target_method_name = opt "add_canister";} };}; 
      record { id = 6_001 : nat64; name = "Update cycles_dispenser config"; description = opt "This will update the configuration of the cycles_dispenser canister such as max_top_up_amount and min_cycles_balance."; function_type = opt variant { GenericNervousSystemFunction = record { validator_canister_id = opt principal "gonut-hqaaa-aaaaf-aby7a-cai"; target_canister_id = opt principal "gonut-hqaaa-aaaaf-aby7a-cai"; validator_method_name = opt "update_config_validate"; target_method_name = opt "update_config";} };};};
  },
)
