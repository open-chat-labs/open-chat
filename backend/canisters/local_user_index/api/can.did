import "../../../libraries/types/can.did";

type JoinGroupArgs =
    record {
        chat_id: ChatId;
        invite_code: opt nat64;
        correlation_id: nat64;
    };

type JoinGroupResponse =
    variant {
        Success: GroupCanisterGroupChatSummary;
        AlreadyInGroupV2: GroupCanisterGroupChatSummary;
        AlreadyInGroup;
        GateCheckFailed: GateCheckFailedReason;
        GroupNotFound;
        GroupNotPublic;
        ParticipantLimitReached: nat32;
        Blocked;
        UserSuspended;
        ChatFrozen;
        InternalError: text;
    };

type ReportMessageArgs =
    record {
        chat_id: ChatId;
        thread_root_message_index: opt MessageIndex;
        event_index: EventIndex;
        reason_code: nat32;
        notes: opt text;
    };

type ReportMessageResponse =
    variant {
        Success;
        InternalError: text;
    };

service: {
    join_group: (JoinGroupArgs) -> (JoinGroupResponse);
    report_message: (ReportMessageArgs) -> (ReportMessageResponse);
}
