type ListExchangesArgs =
    record {};

type ListExchangesResponse =
    record {
        exchanges: vec ExchangeInfo;
    };

type ExchangeInfo =
    record {
        id: nat32;
        name: text;
    };

type MakeOrdersArgs =
    record {
        exchange_id: nat32;
        orders: vec MakeOrderRequest;
    };

type MakeOrderRequest =
    record {
        order_type: OrderType;
        price: nat64;
        amount: nat64;
    };

type OrderType =
    variant {
        Bid;
        Ask;
    };

type MakeOrdersResponse =
    variant {
        Success;
        NotAuthorized;
    };

type CancelOrdersArgs =
    record {
        exchange_id: nat32;
        orders: vec CancelOrderRequest;
    };

type CancelOrderRequest =
    record {
        id: text;
    };

type CancelOrdersResponse =
    variant {
        Success;
        NotAuthorized;
    };

service: {
    list_exchanges: (ListExchangesArgs) -> (ListExchangesResponse) query;
    make_orders: (MakeOrdersArgs) -> (MakeOrdersResponse);
    cancel_orders: (CancelOrdersArgs) -> (CancelOrdersResponse);
}
