// Generated by ts-to-zod
import { z } from "zod";

export const diamondMembershipPlanDurationSchema = z.union([
    z.literal("OneMonth"),
    z.literal("ThreeMonths"),
    z.literal("OneYear"),
    z.literal("Lifetime"),
]);

export const suspensionActionSchema = z.union([
    z.object({
        Unsuspend: z.bigint(),
    }),
    z.object({
        Delete: z.bigint(),
    }),
]);

export const userIdSchema = z.string();

export const diamondMembershipStatusSchema = z.union([
    z.literal("Inactive"),
    z.literal("Active"),
    z.literal("Lifetime"),
]);

export const canisterUpgradeStatusSchema = z.union([
    z.literal("InProgress"),
    z.literal("NotRequired"),
]);

export const chatIdSchema = z.string();

export const userSummaryVolatileSchema = z.object({
    total_chit_earned: z.number(),
    chit_balance: z.number(),
    streak: z.number(),
});

export const diamondMembershipFeesByDurationSchema = z.object({
    one_month: z.bigint(),
    three_months: z.bigint(),
    one_year: z.bigint(),
    lifetime: z.bigint(),
});

export const botConfigSchema = z.object({
    is_oc_controlled: z.boolean(),
    supports_direct_messages: z.boolean(),
    can_be_added_to_groups: z.boolean(),
});

export const suspensionDetailsSchema = z.object({
    reason: z.string(),
    action: suspensionActionSchema,
    suspended_by: userIdSchema,
});

export const emptySchema = z.record(z.never());

export const buildVersionSchema = z.object({
    major: z.number(),
    minor: z.number(),
    patch: z.number(),
});

export const cryptocurrencySchema = z.union([
    z.literal("InternetComputer"),
    z.literal("SNS1"),
    z.literal("CKBTC"),
    z.literal("CHAT"),
    z.literal("KINIC"),
    z.object({
        Other: z.string(),
    }),
]);

export const userIndexDiamondMembershipFeesDiamondMembershipFeesSchema = z.object({
    token: cryptocurrencySchema,
    one_month: z.bigint(),
    three_months: z.bigint(),
    one_year: z.bigint(),
    lifetime: z.bigint(),
});

export const userIndexDiamondMembershipFeesResponseSchema = z.object({
    Success: z.array(userIndexDiamondMembershipFeesDiamondMembershipFeesSchema),
});

export const userIndexPublicKeyResponseSchema = z.union([
    z.object({
        Success: z.string(),
    }),
    z.literal("NotInitialised"),
]);

export const userIndexChitBalancesArgsSchema = z.object({
    users: z.array(userIdSchema),
    year: z.number(),
    month: z.number(),
});

export const userIndexChitBalancesSuccessResultSchema = z.object({
    balances: z.array(z.number()),
});

export const userIndexUpdateDiamondMembershipSubscriptionResponseSchema = z.union([
    z.literal("Success"),
    z.literal("NotDiamondMember"),
    z.literal("AlreadyLifetimeDiamondMember"),
]);

export const diamondMembershipSubscriptionSchema = z.union([
    z.literal("Disabled"),
    z.literal("OneMonth"),
    z.literal("ThreeMonths"),
    z.literal("OneYear"),
]);

export const userIndexSuspendUserResponseSchema = z.union([
    z.literal("Success"),
    z.literal("UserAlreadySuspended"),
    z.literal("UserNotFound"),
    z.object({
        InternalError: z.string(),
    }),
]);

export const userIndexSuspendUserArgsSchema = z.object({
    user_id: userIdSchema,
    duration: z.bigint().nullable(),
    reason: z.string(),
});

export const userIndexCheckUsernameResponseSchema = z.union([
    z.literal("Success"),
    z.literal("UsernameTaken"),
    z.literal("UsernameInvalid"),
    z.object({
        UsernameTooShort: z.number(),
    }),
    z.object({
        UsernameTooLong: z.number(),
    }),
]);

export const userIndexCheckUsernameArgsSchema = z.object({
    username: z.string(),
});

export const userIndexSetModerationFlagsResponseSchema = z.literal("Success");

export const userIndexSetModerationFlagsArgsSchema = z.object({
    moderation_flags_enabled: z.number(),
});

export const userIndexPlatformOperatorsSuccessResultSchema = z.object({
    users: z.array(userIdSchema),
});

export const userIndexPlatformModeratorsSuccessResultSchema = z.object({
    users: z.array(userIdSchema),
});

export const userIndexSetUserUpgradeConcurrencyResponseSchema = z.literal("Success");

export const userIndexSetUserUpgradeConcurrencyArgsSchema = z.object({
    value: z.number(),
});

export const userIndexSuspectedBotsSuccessResultSchema = z.object({
    users: z.array(userIdSchema),
});

export const userIndexSuspectedBotsArgsSchema = z.object({
    after: userIdSchema.nullable(),
    count: z.number(),
});

export const userSummarySchema = z.object({
    user_id: userIdSchema,
    username: z.string(),
    display_name: z.string().nullable(),
    avatar_id: z.bigint().nullable(),
    is_bot: z.boolean(),
    suspended: z.boolean(),
    diamond_member: z.boolean(),
    diamond_membership_status: diamondMembershipStatusSchema,
    total_chit_earned: z.number(),
    chit_balance: z.number(),
    streak: z.number(),
    is_unique_person: z.boolean(),
});

export const userIndexUserArgsSchema = z.object({
    user_id: userIdSchema.nullable(),
    username: z.string().nullable(),
});

export const userIndexReferralMetricsReferralMetricsSchema = z.object({
    users_who_referred: z.number(),
    users_who_referred_paid_diamond: z.number(),
    users_who_referred_unpaid_diamond: z.number(),
    users_who_referred_90_percent_unpaid_diamond: z.number(),
    referrals_of_paid_diamond: z.number(),
    referrals_of_unpaid_diamond: z.number(),
    referrals_other: z.number(),
    icp_raised_by_referrals_to_paid_diamond: z.number(),
});

export const userIndexPayForDiamondMembershipSuccessResultSchema = z.object({
    expires_at: z.bigint(),
    pay_in_chat: z.boolean(),
    subscription: diamondMembershipSubscriptionSchema,
    proof_jwt: z.string(),
});

export const userIndexPayForDiamondMembershipResponseSchema = z.union([
    z.object({
        Success: userIndexPayForDiamondMembershipSuccessResultSchema,
    }),
    z.literal("AlreadyLifetimeDiamondMember"),
    z.literal("CurrencyNotSupported"),
    z.literal("PriceMismatch"),
    z.literal("PaymentAlreadyInProgress"),
    z.literal("UserNotFound"),
    z.object({
        InsufficientFunds: z.bigint(),
    }),
    z.object({
        TransferFailed: z.string(),
    }),
    z.object({
        InternalError: z.string(),
    }),
]);

export const userIndexPayForDiamondMembershipArgsSchema = z.object({
    duration: diamondMembershipPlanDurationSchema,
    token: cryptocurrencySchema,
    expected_price_e8s: z.bigint(),
    recurring: z.boolean(),
});

export const userIndexSearchResultSchema = z.object({
    users: z.array(userSummarySchema),
    timestamp: z.bigint(),
});

export const userIndexSearchResponseSchema = z.object({
    Success: userIndexSearchResultSchema,
});

export const userIndexSearchArgsSchema = z.object({
    search_term: z.string(),
    max_results: z.number(),
});

export const userIndexUnsuspendUserResponseSchema = z.union([
    z.literal("Success"),
    z.literal("UserNotSuspended"),
    z.literal("UserNotFound"),
    z.object({
        InternalError: z.string(),
    }),
]);

export const userIndexUnsuspendUserArgsSchema = z.object({
    user_id: userIdSchema,
});

export const userIndexUsersUserGroupSchema = z.object({
    users: z.array(userIdSchema),
    updated_since: z.bigint(),
});

export const userIndexSubmitProofOfUniquePersonhoodResponseSchema = z.union([
    z.literal("Success"),
    z.object({
        Invalid: z.string(),
    }),
    z.literal("UserNotFound"),
]);

export const principalSchema = z.string();

export const userIndexChitLeaderboardChitUserBalanceSchema = z.object({
    user_id: userIdSchema,
    username: z.string(),
    balance: z.number(),
});

export const userIndexSetUsernameArgsSchema = z.object({
    username: z.string(),
});

export const userIndexSetUsernameResponseSchema = z.union([
    z.literal("Success"),
    z.literal("UsernameTaken"),
    z.literal("UserNotFound"),
    z.literal("UsernameInvalid"),
    z.object({
        UsernameTooShort: z.number(),
    }),
    z.object({
        UsernameTooLong: z.number(),
    }),
]);

export const userIndexSetDisplayNameArgsSchema = z.object({
    display_name: z.string().nullable(),
});

export const userIndexSetDisplayNameResponseSchema = z.union([
    z.literal("Success"),
    z.literal("Unauthorized"),
    z.literal("UserNotFound"),
    z.literal("DisplayNameInvalid"),
    z.object({
        DisplayNameTooShort: z.number(),
    }),
    z.object({
        DisplayNameTooLong: z.number(),
    }),
]);

export const userIndexSetDiamondMembershipFeesResponseSchema = z.union([
    z.literal("Success"),
    z.literal("Invalid"),
]);

export const diamondMembershipFeesSchema = z.object({
    chat_fees: diamondMembershipFeesByDurationSchema,
    icp_fees: diamondMembershipFeesByDurationSchema,
});

export const userIndexReferralLeaderboardReferralStatsSchema = z.object({
    user_id: userIdSchema,
    username: z.string(),
    total_rewards_e8s: z.bigint(),
    diamond_members: z.number(),
    total_users: z.number(),
});

export const userIndexReferralLeaderboardMonthSuccessResultSchema = z.object({
    year: z.number(),
    month: z.number(),
    results: z.array(userIndexReferralLeaderboardReferralStatsSchema),
});

export const userIndexReferralLeaderboardYearAndMonthSchema = z.object({
    year: z.number(),
    month: z.number(),
});

export const userIndexReferralLeaderboardLeaderboardFilterSchema = z.union([
    z.object({
        Month: userIndexReferralLeaderboardYearAndMonthSchema,
    }),
    z.literal("CurrentMonth"),
]);

export const userIndexReferralLeaderboardArgsSchema = z.object({
    filter: userIndexReferralLeaderboardLeaderboardFilterSchema.nullable(),
    count: z.number(),
});

export const userIndexPlatformModeratorsGroupResponseSchema = z.object({
    Success: chatIdSchema,
});

export const userIndexReportedMessagesSuccessResultSchema = z.object({
    json: z.string(),
});

export const userIndexReportedMessagesArgsSchema = z.object({
    user_id: userIdSchema.nullable(),
});

export const userIndexUserRegistrationCanisterResponseSchema = z.union([
    z.object({
        Success: principalSchema,
    }),
    z.literal("NewRegistrationsClosed"),
]);

export const diamondMembershipDetailsSchema = z.object({
    expires_at: z.bigint(),
    pay_in_chat: z.boolean(),
    subscription: diamondMembershipSubscriptionSchema,
});

export const diamondMembershipStatusFullSchema = z.union([
    z.literal("Inactive"),
    z.object({
        Active: diamondMembershipDetailsSchema,
    }),
    z.literal("Lifetime"),
]);

export const userSummaryStableSchema = z.object({
    username: z.string(),
    display_name: z.string().nullable(),
    avatar_id: z.bigint().nullable(),
    is_bot: z.boolean(),
    suspended: z.boolean(),
    diamond_membership_status: diamondMembershipStatusSchema,
    is_unique_person: z.boolean(),
    bot_config: botConfigSchema.nullable(),
});

export const currentUserSummarySchema = z.object({
    user_id: userIdSchema,
    username: z.string(),
    display_name: z.string().nullable(),
    avatar_id: z.bigint().nullable(),
    is_bot: z.boolean(),
    is_platform_moderator: z.boolean(),
    is_platform_operator: z.boolean(),
    suspension_details: suspensionDetailsSchema.nullable(),
    is_suspected_bot: z.boolean(),
    diamond_membership_details: diamondMembershipDetailsSchema.nullable(),
    diamond_membership_status: diamondMembershipStatusFullSchema,
    moderation_flags_enabled: z.number(),
    is_unique_person: z.boolean(),
});

export const userIndexChitBalancesResponseSchema = z.object({
    Success: userIndexChitBalancesSuccessResultSchema,
});

export const userIndexUpdateDiamondMembershipSubscriptionArgsSchema = z.object({
    pay_in_chat: z.boolean().nullable(),
    subscription: diamondMembershipSubscriptionSchema.nullable(),
});

export const userIndexPlatformOperatorsResponseSchema = z.object({
    Success: userIndexPlatformOperatorsSuccessResultSchema,
});

export const userIndexPlatformModeratorsResponseSchema = z.object({
    Success: userIndexPlatformModeratorsSuccessResultSchema,
});

export const userIndexSuspectedBotsResponseSchema = z.object({
    Success: userIndexSuspectedBotsSuccessResultSchema,
});

export const userIndexUserResponseSchema = z.union([
    z.object({
        Success: userSummarySchema,
    }),
    z.literal("UserNotFound"),
]);

export const userIndexReferralMetricsResponseSchema = z.object({
    Success: userIndexReferralMetricsReferralMetricsSchema,
});

export const userSummaryV2Schema = z.object({
    user_id: userIdSchema,
    stable: userSummaryStableSchema.nullable(),
    volatile: userSummaryVolatileSchema.nullable(),
});

export const userIndexUsersArgsSchema = z.object({
    user_groups: z.array(userIndexUsersUserGroupSchema),
    users_suspended_since: z.bigint().nullable(),
});

export const userIndexUsersResultSchema = z.object({
    users: z.array(userSummaryV2Schema),
    current_user: currentUserSummarySchema.nullable(),
    deleted: z.array(userIdSchema),
    timestamp: z.bigint(),
});

export const userIndexSubmitProofOfUniquePersonhoodArgsSchema = z.object({
    user_ii_principal: principalSchema,
    credential_jwt: z.string(),
});

export const userIndexChitLeaderboardResponseSchema = z.object({
    Success: z.array(userIndexChitLeaderboardChitUserBalanceSchema),
});

export const userIndexSetDiamondMembershipFeesArgsSchema = z.object({
    fees: diamondMembershipFeesSchema,
});

export const userIndexReferralLeaderboardResponseSchema = z.union([
    z.object({
        AllTime: z.array(userIndexReferralLeaderboardReferralStatsSchema),
    }),
    z.object({
        Month: userIndexReferralLeaderboardMonthSuccessResultSchema,
    }),
]);

export const userIndexReportedMessagesResponseSchema = z.object({
    Success: userIndexReportedMessagesSuccessResultSchema,
});

export const userIndexCurrentUserSuccessResultSchema = z.object({
    user_id: userIdSchema,
    username: z.string(),
    date_created: z.bigint(),
    display_name: z.string().nullable(),
    avatar_id: z.bigint().nullable(),
    canister_upgrade_status: canisterUpgradeStatusSchema,
    wasm_version: buildVersionSchema,
    icp_account: z.string(),
    referrals: z.array(userIdSchema),
    is_platform_moderator: z.boolean(),
    is_platform_operator: z.boolean(),
    suspension_details: suspensionDetailsSchema.nullable(),
    is_suspected_bot: z.boolean(),
    diamond_membership_details: diamondMembershipDetailsSchema.nullable(),
    diamond_membership_status: diamondMembershipStatusFullSchema,
    moderation_flags_enabled: z.number(),
    is_unique_person: z.boolean(),
});

export const userIndexUsersResponseSchema = z.object({
    Success: userIndexUsersResultSchema,
});

export const userIndexCurrentUserResponseSchema = z.union([
    z.object({
        Success: userIndexCurrentUserSuccessResultSchema,
    }),
    z.literal("UserNotFound"),
]);
