type UserId = principal;
type Timestamp = nat64;

type UserSummary =
    record {
        id: UserId;
        username: text;
        seconds_since_last_online: nat32;
        version: nat32;
    };

type MyProfile = 
    record {
        id: UserId;
        username: text;
        account_balance: nat;
        version: nat32;
    };

type RegisterUserResponse =
    variant {
        Success: MyProfile;
        UserExists;
        UsernameTaken;
    };

type UpdateUsernameResponse =
    variant {
        Success;
        SuccessNoChange;
        UsernameTaken;
        UserNotFound;
    };

type TransferCyclesRequest = 
    record {
        sender: UserId;
        recipient: UserId;
        amount: nat;
    };

type TransferCyclesResponse = 
    variant {
        Success: record {
            new_balance: nat;
        };
        UserNotFound;
        RecipientNotFound;
        BalanceExceeded;
    };

type GetCurrentUserResponse =
    variant {
        Success: MyProfile;
        UserNotFound;
    };

type GetUserIdResponse =
    variant {
        Success: UserId;
        UserNotFound;
    };

type GetUsersRequest =
    record {
        users: vec UserId;
        updated_since: opt Timestamp;
    };

type GetUsersResponse =
    variant {
        Success: record {
            users: vec UserSummary;
            timestamp: Timestamp;
        }
    };

type SearchUsersRequest =
    record {
        search_term: text;
        max_results: nat8
    };

type SearchUsersResponse =
    variant {
        Success: record {
            users: vec UserSummary;
        }
    };

service : {
    register_user: (text) -> (RegisterUserResponse);
    update_username: (text) -> (UpdateUsernameResponse);
    mark_as_online: () -> ();
    transfer_cycles: (TransferCyclesRequest) -> (TransferCyclesResponse);

    get_current_user: () -> (GetCurrentUserResponse) query;
    get_user_id: (text) -> (GetUserIdResponse) query;
    get_users: (GetUsersRequest) -> (GetUsersResponse) query;
    search_users: (SearchUsersRequest) -> (SearchUsersResponse) query;
}