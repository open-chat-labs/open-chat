// This canister will store a map of phone number to code and claim info
// In heartbeat function will check balance and notify the "controller" canister if its low

type CanisterId = principal;

type PhoneNumber = 
    record {
        country_code: nat16;
        number: nat64;
    };

type RegisterRequest = 
    record {        
        number: PhoneNumber;
    };

type RegisterResponse = 
    variant {
        Success;
        Taken;
        TooManyAttempts;
    };

type ClaimRequest = 
    record {        
        number: PhoneNumber;
        code: nat32;
    };

type ClaimResponse = 
    variant {
        Success: record {
            canister: CanisterId;
        };
        Invalid;
        Expired;
        UserExists;
        UserLimitReached: nat64;
    };

service : {
    // Checks phone number not already registered and if not then sends code to phone
    register: (RegisterRequest) -> (RegisterResponse);

    // If code is valid and not expired then register principal with user_index
    // (calls user_index to create user canister)
    claim: (ClaimRequest) -> (ClaimResponse);
}