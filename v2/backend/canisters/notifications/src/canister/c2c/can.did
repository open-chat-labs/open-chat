type GroupId = CanisterId;
type MessageIndex = nat32;
type UserId = CanisterId;

type PushSubscriptionArgs =
    record {
        subscription: text;
    };

type PushSubscriptionResponse =
    variant {
        Success;
    };

type PushDirectMessageNotificationArgs =
    record {
        sender: UserId;
        recipient: UserId;
        message_index: MessageIndex;
    };

type PushDirectMessageNotificationResponse =
    variant {
        Success;
    };

type PushGroupMessageNotificationArgs =
    record {
        chat_id: GroupId;
        sender: UserId;
        recipients: vec UserId;
        message_index: MessageIndex;
    };

type PushGroupMessageNotificationResponse =
    variant {
        Success;
    };

service: {
    push_subscription: (PushSubscriptionArgs) -> (PushSubscriptionResponse);
    push_direct_message_notification: (PushDirectMessageNotificationArgs) -> (PushDirectMessageNotificationResponse);
    push_group_message_notification: (PushGroupMessageNotificationArgs) -> (PushGroupMessageNotificationResponse);
}
